pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    cd app/smackapi
    go get github.com/gorilla/mux
    GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o smackapi
    go test -v
  workingDirectory: '$(modulePath)'
  displayName: 'Build api'

- script: |
    SHORT_COMMIT=`echo $(Build.SourceVersion)| cut -c1-8`
    docker build -t $(dockerId)/smackapi:$(Build.SourceBranchName)-$SHORT_COMMIT --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H%M%SZ"` --build-arg IMAGE_TAG_REF=$SHORT_COMMIT --build-arg VCS_REF=$SHORT_COMMIT app/smackapi/
  workingDirectory: '$(modulePath)'
  displayName: 'docker build api'

- script: |
    SHORT_COMMIT=`echo $(Build.SourceVersion)| cut -c1-8`
    docker login -u $(dockerId) -p $(dockerPassword)
    docker push $(dockerId)/smackapi:$(Build.SourceBranchName)-$SHORT_COMMIT 
  workingDirectory: '$(modulePath)'
  displayName: 'docker push api'

- script: |
    SHORT_COMMIT=`echo $(Build.SourceVersion)| cut -c1-8`
    echo $(Build.SourceBranchName)-$SHORT_COMMIT > $(Build.ArtifactStagingDirectory)/imagetag
  displayName: 'export variable'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop' 
